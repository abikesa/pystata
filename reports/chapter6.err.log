Traceback (most recent call last):
  File "/Users/apollo/Documents/Melody/myenv/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/apollo/Documents/Melody/myenv/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/apollo/Documents/Melody/myenv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.3/Frameworks/Python.framework/Versions/3.12/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/apollo/Documents/Melody/myenv/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/apollo/Documents/Melody/myenv/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/apollo/Documents/Melody/myenv/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
from lifelines import CoxPHFitter

# Assuming 'data' is already the DataFrame loaded previously and necessary preprocessing is done

# Ensure 'donor' is a categorical variable
data['donor'] = data['donor'].astype('category')

# Fit a Cox proportional hazards model
cph = CoxPHFitter()
cph.fit(data, duration_col='duration', event_col='event', formula="C(donor)")

# Extract the summary and relevant coefficients
summary = cph.summary

# Filter only relevant columns
coefficients = summary.loc[:, ['coef', 'exp(coef)', 'exp(coef) lower 95%', 'exp(coef) upper 95%']]

# Rename the rows for clarity
coefficients.index = ['HealthyNondonor vs Donor', 'NotSoHealthyNondonor vs Donor']

# Display the simplified results
print("Coefficients and Hazard Ratios Relative to Baseline (Donor):")
print(coefficients)

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
[0;32m/var/folders/z3/nwmg00j178vfczmb9nk9487h0000gn/T/ipykernel_44930/3715799275.py[0m in [0;36m?[0;34m()[0m
[1;32m      7[0m [0mdata[0m[0;34m[[0m[0;34m'donor'[0m[0;34m][0m [0;34m=[0m [0mdata[0m[0;34m[[0m[0;34m'donor'[0m[0;34m][0m[0;34m.[0m[0mastype[0m[0;34m([0m[0;34m'category'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      8[0m [0;34m[0m[0m
[1;32m      9[0m [0;31m# Fit a Cox proportional hazards model[0m[0;34m[0m[0;34m[0m[0m
[1;32m     10[0m [0mcph[0m [0;34m=[0m [0mCoxPHFitter[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 11[0;31m [0mcph[0m[0;34m.[0m[0mfit[0m[0;34m([0m[0mdata[0m[0;34m,[0m [0mduration_col[0m[0;34m=[0m[0;34m'duration'[0m[0;34m,[0m [0mevent_col[0m[0;34m=[0m[0;34m'event'[0m[0;34m,[0m [0mformula[0m[0;34m=[0m[0;34m"C(donor)"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     12[0m [0;34m[0m[0m
[1;32m     13[0m [0;31m# Extract the summary and relevant coefficients[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m [0msummary[0m [0;34m=[0m [0mcph[0m[0;34m.[0m[0msummary[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Documents/Melody/myenv/lib/python3.12/site-packages/lifelines/utils/__init__.py[0m in [0;36m?[0;34m(model, *args, **kwargs)[0m
[1;32m     53[0m         [0;34m@[0m[0mwraps[0m[0;34m([0m[0mfunction[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     54[0m         [0;32mdef[0m [0mf[0m[0;34m([0m[0mmodel[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     55[0m             [0mcls[0m[0;34m.[0m[0mset_censoring_type[0m[0;34m([0m[0mmodel[0m[0;34m,[0m [0mcls[0m[0;34m.[0m[0mRIGHT[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 56[0;31m             [0;32mreturn[0m [0mfunction[0m[0;34m([0m[0mmodel[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m~/Documents/Melody/myenv/lib/python3.12/site-packages/lifelines/fitters/coxph_fitter.py[0m in [0;36m?[0;34m(self, df, duration_col, event_col, show_progress, initial_point, strata, weights_col, cluster_col, robust, batch_mode, timeline, formula, entry_col, fit_options)[0m
[1;32m    286[0m             [0mcph[0m[0;34m.[0m[0mprint_summary[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    287[0m [0;34m[0m[0m
[1;32m    288[0m         """
[1;32m    289[0m         [0mself[0m[0;34m.[0m[0mstrata[0m [0;34m=[0m [0mutils[0m[0;34m.[0m[0m_to_list_or_singleton[0m[0;34m([0m[0mutils[0m[0;34m.[0m[0mcoalesce[0m[0;34m([0m[0mstrata[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mstrata[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 290[0;31m         self._model = self._fit_model(
[0m[1;32m    291[0m             [0mdf[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    292[0m             [0mduration_col[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    293[0m             [0mevent_col[0m[0;34m=[0m[0mevent_col[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Documents/Melody/myenv/lib/python3.12/site-packages/lifelines/fitters/coxph_fitter.py[0m in [0;36m?[0;34m(self, *args, **kwargs)[0m
[1;32m    608[0m     [0;32mdef[0m [0m_fit_model[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    609[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mbaseline_estimation_method[0m [0;34m==[0m [0;34m"breslow"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 610[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_fit_model_breslow[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    611[0m         [0;32melif[0m [0mself[0m[0;34m.[0m[0mbaseline_estimation_method[0m [0;34m==[0m [0;34m"spline"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    612[0m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_fit_model_spline[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    613[0m         [0;32melif[0m [0mself[0m[0;34m.[0m[0mbaseline_estimation_method[0m [0;34m==[0m [0;34m"piecewise"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Documents/Melody/myenv/lib/python3.12/site-packages/lifelines/fitters/coxph_fitter.py[0m in [0;36m?[0;34m(self, *args, **kwargs)[0m
[1;32m    619[0m         model = SemiParametricPHFitter(
[1;32m    620[0m             [0mpenalizer[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mpenalizer[0m[0;34m,[0m [0ml1_ratio[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0ml1_ratio[0m[0;34m,[0m [0mstrata[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mstrata[0m[0;34m,[0m [0malpha[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0malpha[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0m_label[0m[0;34m[0m[0;34m[0m[0m
[1;32m    621[0m         [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    622[0m         [0;32mif[0m [0mutils[0m[0;34m.[0m[0mCensoringType[0m[0;34m.[0m[0mis_right_censoring[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 623[0;31m             [0mmodel[0m[0;34m.[0m[0mfit[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    624[0m             [0;32mreturn[0m [0mmodel[0m[0;34m[0m[0;34m[0m[0m
[1;32m    625[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    626[0m             raise ValueError(

[0;32m~/Documents/Melody/myenv/lib/python3.12/site-packages/lifelines/utils/__init__.py[0m in [0;36m?[0;34m(model, *args, **kwargs)[0m
[1;32m     53[0m         [0;34m@[0m[0mwraps[0m[0;34m([0m[0mfunction[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     54[0m         [0;32mdef[0m [0mf[0m[0;34m([0m[0mmodel[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     55[0m             [0mcls[0m[0;34m.[0m[0mset_censoring_type[0m[0;34m([0m[0mmodel[0m[0;34m,[0m [0mcls[0m[0;34m.[0m[0mRIGHT[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 56[0;31m             [0;32mreturn[0m [0mfunction[0m[0;34m([0m[0mmodel[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m~/Documents/Melody/myenv/lib/python3.12/site-packages/lifelines/fitters/coxph_fitter.py[0m in [0;36m?[0;34m(self, df, duration_col, event_col, show_progress, initial_point, strata, weights_col, cluster_col, robust, batch_mode, timeline, formula, entry_col, fit_options)[0m
[1;32m   1225[0m         [0mself[0m[0;34m.[0m[0mstrata[0m [0;34m=[0m [0mutils[0m[0;34m.[0m[0m_to_list_or_singleton[0m[0;34m([0m[0mutils[0m[0;34m.[0m[0mcoalesce[0m[0;34m([0m[0mstrata[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mstrata[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1226[0m         [0mself[0m[0;34m.[0m[0mformula[0m [0;34m=[0m [0mformula[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1227[0m         [0mself[0m[0;34m.[0m[0mentry_col[0m [0;34m=[0m [0mentry_col[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1228[0m [0;34m[0m[0m
[0;32m-> 1229[0;31m         [0mX[0m[0;34m,[0m [0mT[0m[0;34m,[0m [0mE[0m[0;34m,[0m [0mweights[0m[0;34m,[0m [0mentries[0m[0;34m,[0m [0moriginal_index[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0m_clusters[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_preprocess_dataframe[0m[0;34m([0m[0mdf[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1230[0m [0;34m[0m[0m
[1;32m   1231[0m         [0mself[0m[0;34m.[0m[0mdurations[0m [0;34m=[0m [0mT[0m[0;34m.[0m[0mcopy[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1232[0m         [0mself[0m[0;34m.[0m[0mevent_observed[0m [0;34m=[0m [0mE[0m[0;34m.[0m[0mcopy[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Documents/Melody/myenv/lib/python3.12/site-packages/lifelines/fitters/coxph_fitter.py[0m in [0;36m?[0;34m(self, df)[0m
[1;32m   1302[0m             [0moriginal_index[0m [0;34m=[0m [0mdf[0m[0;34m.[0m[0mindex[0m[0;34m.[0m[0mcopy[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1303[0m             [0mdf[0m [0;34m=[0m [0mdf[0m[0;34m.[0m[0mset_index[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mstrata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1304[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1305[0m             [0msort_by[0m [0;34m=[0m [0;34m[[0m[0mself[0m[0;34m.[0m[0mduration_col[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mevent_col[0m[0;34m][0m [0;32mif[0m [0mself[0m[0;34m.[0m[0mevent_col[0m [0;32melse[0m [0;34m[[0m[0mself[0m[0;34m.[0m[0mduration_col[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1306[0;31m             [0mdf[0m [0;34m=[0m [0mdf[0m[0;34m.[0m[0msort_values[0m[0;34m([0m[0mby[0m[0;34m=[0m[0msort_by[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1307[0m             [0moriginal_index[0m [0;34m=[0m [0mdf[0m[0;34m.[0m[0mindex[0m[0;34m.[0m[0mcopy[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1308[0m [0;34m[0m[0m
[1;32m   1309[0m         [0;31m# Extract time, event and metadata[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Documents/Melody/myenv/lib/python3.12/site-packages/pandas/core/frame.py[0m in [0;36m?[0;34m(self, by, axis, ascending, inplace, kind, na_position, ignore_index, key)[0m
[1;32m   7168[0m                 [0;34mf"[0m[0;34mLength of ascending ([0m[0;34m{[0m[0mlen[0m[0;34m([0m[0mascending[0m[0;34m)[0m[0;34m}[0m[0;34m)[0m[0;34m"[0m  [0;31m# type: ignore[arg-type][0m[0;34m[0m[0;34m[0m[0m
[1;32m   7169[0m                 [0;34mf"[0m[0;34m != length of by ([0m[0;34m{[0m[0mlen[0m[0;34m([0m[0mby[0m[0;34m)[0m[0;34m}[0m[0;34m)[0m[0;34m"[0m[0;34m[0m[0;34m[0m[0m
[1;32m   7170[0m             [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   7171[0m         [0;32mif[0m [0mlen[0m[0;34m([0m[0mby[0m[0;34m)[0m [0;34m>[0m [0;36m1[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 7172[0;31m             [0mkeys[0m [0;34m=[0m [0;34m[[0m[0mself[0m[0;34m.[0m[0m_get_label_or_level_values[0m[0;34m([0m[0mx[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0maxis[0m[0;34m)[0m [0;32mfor[0m [0mx[0m [0;32min[0m [0mby[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   7173[0m [0;34m[0m[0m
[1;32m   7174[0m             [0;31m# need to rewrap columns in Series to apply key function[0m[0;34m[0m[0;34m[0m[0m
[1;32m   7175[0m             [0;32mif[0m [0mkey[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Documents/Melody/myenv/lib/python3.12/site-packages/pandas/core/generic.py[0m in [0;36m?[0;34m(self, key, axis)[0m
[1;32m   1907[0m             [0mvalues[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mxs[0m[0;34m([0m[0mkey[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0mother_axes[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m.[0m[0m_values[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1908[0m         [0;32melif[0m [0mself[0m[0;34m.[0m[0m_is_level_reference[0m[0;34m([0m[0mkey[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0maxis[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1909[0m             [0mvalues[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0maxes[0m[0;34m[[0m[0maxis[0m[0;34m][0m[0;34m.[0m[0mget_level_values[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m.[0m[0m_values[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1910[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1911[0;31m             [0;32mraise[0m [0mKeyError[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1912[0m [0;34m[0m[0m
[1;32m   1913[0m         [0;31m# Check for duplicates[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1914[0m         [0;32mif[0m [0mvalues[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m1[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mKeyError[0m: 'duration'

